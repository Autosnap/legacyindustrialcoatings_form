{"version":3,"sources":["FormContext.js","components/FormNavigation.js","components/ProgressBar.js","pages/FormPage1.js","pages/FormPage2.js","pages/FormPage25.js","pages/FormPage3.js","pages/FormPage4.js","pages/FormPage5.js","pages/FormPage6.js","pages/FormPage7.js","pages/FormPage8.js","pages/FormPage85.js","pages/FormPage9.js","pages/FormCompletionPage.js","App.js","index.js"],"names":["FormContext","createContext","FormProvider","_ref","children","formData","setFormData","useState","firstName","lastName","streetAddress","unitNumber","city","state","zipCode","garageSize","floorStyle","existingCoating","silicaSand","floorCondition","garageStepCoating","installationDate1","installationDate2","stemTreatment","email","phone","React","createElement","Provider","value","updateFormData","key","prevState","[object Object]","calculateFinalQuote","baseAmount","FormNavigation","nextPath","prevPath","isLastStep","onNext","navigate","useNavigate","className","onClick","handleNextClick","ProgressBar","currentStep","totalSteps","progress","style","width","FormPage1","useContext","errors","setErrors","type","onChange","e","target","trim","prevErrors","handleNext","validateFields","newErrors","Object","keys","length","FormPage2","FormPage2_5","setgarageSize","error","setError","handleOptionChange","FormPage3","options","label","image","preview","map","option","selected","find","src","alt","imagePreview","FormPage4","checked","FormPage5","FormPage6","_options$find","title","selectedImage","FormPage7","FormPage8","FormPage85","openCalendar1","setOpenCalendar1","openCalendar2","setOpenCalendar2","minSelectableDate","Date","setDate","getDate","formatDate","date","toLocaleDateString","undefined","year","month","day","readOnly","placeholder","Calendar","minDate","FormPage9","required","handleSubmit","finalQuote","templateParams","console","log","emailjs","send","then","response","status","text","alert","catch","FormCompletionPage","handlePaymentRedirect","window","location","href","App","Router","Routes","Route","path","element","FormPage25","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ac2abbf0.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\n\nconst FormContext = createContext();\n\nconst FormProvider = ({ children }) => {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    streetAddress: '',\n    unitNumber: '',\n    city: '',\n    state: '',\n    zipCode: '',\n    garageSize:'',\n    floorStyle: '',\n    existingCoating: false,\n    silicaSand: false,\n    floorCondition: '',\n    garageStepCoating: false,\n    installationDate1: '',\n    installationDate2: '',\n    stemTreatment: '',\n    email: '',\n    phone: '',\n  });\n\n  const updateFormData = (key, value) => {\n    setFormData(prevState => ({ ...prevState, [key]: value }));\n  };\n\n  const calculateFinalQuote = () => {\n    let baseAmount = 0;\n\n    // Determine the base amount based on garageSize selection\n    if (formData.garageSize === '2 Car Garage') {\n      baseAmount = 2200;\n    } else if (formData.garageSize === '3 Car Garage') {\n      baseAmount = 3200;\n    } else if (formData.garageSize === '4 Car Garage') {\n      baseAmount = 4200;\n    }\n\n    // Apply additional charges based on form selections\n    if (formData.existingCoating) {\n      if (formData.garageSize === '2 Car Garage') {\n        baseAmount += 300;\n      } else if (formData.garageSize === '3 Car Garage') {\n        baseAmount += 450;\n      } else if (formData.garageSize === '4 Car Garage') {\n        baseAmount += 600;\n      }\n    }\n\n    if (formData.silicaSand) {\n      if (formData.garageSize === '2 Car Garage') {\n        baseAmount += 50;\n      } else if (formData.garageSize === '3 Car Garage') {\n        baseAmount += 100;\n      } else if (formData.garageSize === '4 Car Garage') {\n        baseAmount += 150;\n      }\n    }\n\n    if (formData.stemTreatment && formData.stemTreatment !== 'none') {\n      if (formData.garageSize === '2 Car Garage') {\n        baseAmount += 120;\n      } else if (formData.garageSize === '3 Car Garage') {\n        baseAmount += 280;\n      } else if (formData.garageSize === '4 Car Garage') {\n        baseAmount += 440;\n      }\n    }\n\n    if (formData.floorCondition === 'Medium Damage') {\n      if (formData.garageSize === '2 Car Garage') {\n        baseAmount += 50;\n      } else if (formData.garageSize === '3 Car Garage') {\n        baseAmount += 100;\n      } else if (formData.garageSize === '4 Car Garage') {\n        baseAmount += 150;\n      }\n    } else if (formData.floorCondition === 'Heavy Damage') {\n      if (formData.garageSize === '2 Car Garage') {\n        baseAmount += 120;\n      } else if (formData.garageSize === '3 Car Garage') {\n        baseAmount += 180;\n      } else if (formData.garageSize === '4 Car Garage') {\n        baseAmount += 240;\n      }\n    }\n\n    // Apply garageStepCoating charge if true\n    if (formData.garageStepCoating) {\n      baseAmount += 175;\n    }\n\n    return baseAmount;\n  };\n\n  return (\n    <FormContext.Provider value={{ formData, updateFormData, calculateFinalQuote }}>\n      {children}\n    </FormContext.Provider>\n  );\n};\n\nexport { FormContext, FormProvider };\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst FormNavigation = ({ nextPath, prevPath, isLastStep, onNext }) => {\n  const navigate = useNavigate();\n\n  const handleNextClick = () => {\n    if (onNext) {\n      const canProceed = onNext();\n      if (canProceed) {\n        navigate(nextPath);\n      }\n    } else {\n      navigate(nextPath);\n    }\n  };\n\n  return (\n    <div className=\"form-navigation\">\n      {prevPath && <button onClick={() => navigate(prevPath)}>Back</button>}\n      {nextPath && (\n        <button onClick={handleNextClick}>\n          {isLastStep ? 'Get Quote Now!' : 'Continue'}\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default FormNavigation;\n","import React from 'react';\n\nconst ProgressBar = ({ currentStep, totalSteps }) => {\n  const progress = (currentStep / totalSteps) * 100;\n\n  return (\n    <div className=\"progress-bar\">\n      <div className=\"progress-bar-fill\" style={{ width: `${progress}%` }}></div>\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useContext, useState } from 'react';\nimport { FormContext } from '../FormContext';\nimport FormNavigation from '../components/FormNavigation';\nimport ProgressBar from '../components/ProgressBar';\n\nconst FormPage1 = ({ currentStep, totalSteps }) => {\n  const { formData, updateFormData } = useContext(FormContext);\n  const [errors, setErrors] = useState({});\n\n  const handleFirstNameChange = (e) => {\n    updateFormData('firstName', e.target.value);\n    if (e.target.value.trim() !== '') {\n      setErrors(prevErrors => ({ ...prevErrors, firstName: '' }));\n    }\n  };\n\n  const handleLastNameChange = (e) => {\n    updateFormData('lastName', e.target.value);\n    if (e.target.value.trim() !== '') {\n      setErrors(prevErrors => ({ ...prevErrors, lastName: '' }));\n    }\n  };\n\n  const validateFields = () => {\n    const newErrors = {};\n    if (!formData.firstName.trim()) {\n      newErrors.firstName = 'First Name is required';\n    }\n    if (!formData.lastName.trim()) {\n      newErrors.lastName = 'Last Name is required';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleNext = () => {\n    if (validateFields()) {\n      return true; // Validation passed, proceed to the next page\n    } else {\n      return false; // Validation failed, stay on the current page\n    }\n  };\n\n  return (\n    <div className=\"form-page\">\n      <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />\n      <h1>Basic Information</h1>\n      <form>\n        <div className=\"form-group\">\n          <label>First Name:</label>\n          <input\n            type=\"text\"\n            value={formData.firstName}\n            onChange={handleFirstNameChange}\n          />\n          {errors.firstName && <span className=\"error-message\">{errors.firstName}</span>}\n        </div>\n        <div className=\"form-group\">\n          <label>Last Name:</label>\n          <input\n            type=\"text\"\n            value={formData.lastName}\n            onChange={handleLastNameChange}\n          />\n          {errors.lastName && <span className=\"error-message\">{errors.lastName}</span>}\n        </div>\n      </form>\n      <FormNavigation \n        nextPath=\"/step2\" \n        onNext={handleNext} \n      />\n    </div>\n  );\n};\n\nexport default FormPage1;\n","import React, { useContext, useState } from 'react';\nimport { FormContext } from '../FormContext';\nimport FormNavigation from '../components/FormNavigation';\nimport ProgressBar from '../components/ProgressBar';\n\nconst FormPage2 = ({ currentStep, totalSteps }) => {\n  const { formData, updateFormData } = useContext(FormContext);\n  const [errors, setErrors] = useState({});\n\n  const handleStreetAddressChange = (e) => {\n    updateFormData('streetAddress', e.target.value);\n    if (e.target.value.trim() !== '') {\n      setErrors(prevErrors => ({ ...prevErrors, streetAddress: '' }));\n    }\n  };\n\n  const handleCityChange = (e) => {\n    updateFormData('city', e.target.value);\n    if (e.target.value.trim() !== '') {\n      setErrors(prevErrors => ({ ...prevErrors, city: '' }));\n    }\n  };\n\n  const handleStateChange = (e) => {\n    updateFormData('state', e.target.value);\n    if (e.target.value.trim() !== '') {\n      setErrors(prevErrors => ({ ...prevErrors, state: '' }));\n    }\n  };\n\n  const handleZipCodeChange = (e) => {\n    updateFormData('zipCode', e.target.value);\n    if (e.target.value.trim() !== '') {\n      setErrors(prevErrors => ({ ...prevErrors, zipCode: '' }));\n    }\n  };\n\n  const validateFields = () => {\n    const newErrors = {};\n    if (!formData.streetAddress.trim()) {\n      newErrors.streetAddress = 'Street Address is required';\n    }\n    if (!formData.city.trim()) {\n      newErrors.city = 'City is required';\n    }\n    if (!formData.state.trim()) {\n      newErrors.state = 'State is required';\n    }\n    if (!formData.zipCode.trim()) {\n      newErrors.zipCode = 'ZIP Code is required';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleNext = () => {\n    if (validateFields()) {\n      return true; // Validation passed, proceed to the next page\n    } else {\n      return false; // Validation failed, stay on the current page\n    }\n  };\n\n  return (\n    <div className=\"form-page\">\n      <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />\n      <h1>Enter your address...</h1>\n      <form>\n        <div className=\"form-group\">\n          <label>Street Address:</label>\n          <input\n            type=\"text\"\n            value={formData.streetAddress}\n            onChange={handleStreetAddressChange}\n          />\n          {errors.streetAddress && <span className=\"error-message\">{errors.streetAddress}</span>}\n        </div>\n        <div className=\"form-group\">\n          <label>City:</label>\n          <input\n            type=\"text\"\n            value={formData.city}\n            onChange={handleCityChange}\n          />\n          {errors.city && <span className=\"error-message\">{errors.city}</span>}\n        </div>\n        <div className=\"form-group\">\n          <label>State:</label>\n          <input\n            type=\"text\"\n            value={formData.state}\n            onChange={handleStateChange}\n          />\n          {errors.state && <span className=\"error-message\">{errors.state}</span>}\n        </div>\n        <div className=\"form-group\">\n          <label>ZIP Code:</label>\n          <input\n            type=\"text\"\n            value={formData.zipCode}\n            onChange={handleZipCodeChange}\n          />\n          {errors.zipCode && <span className=\"error-message\">{errors.zipCode}</span>}\n        </div>\n      </form>\n      <FormNavigation \n        prevPath=\"/\" \n        nextPath=\"/step2-5\" \n        onNext={handleNext} \n      />\n    </div>\n  );\n};\n\nexport default FormPage2;\n","import React, { useState, useContext } from 'react';\nimport { FormContext } from '../FormContext';\nimport FormNavigation from '../components/FormNavigation';\nimport ProgressBar from '../components/ProgressBar';\n\nconst FormPage2_5 = ({ currentStep, totalSteps }) => {\n  const { updateFormData } = useContext(FormContext);\n  const [garageSize, setgarageSize] = useState('');\n  const [error, setError] = useState('');\n\n  const handleOptionChange = (value) => {\n    setgarageSize(value);\n    updateFormData('garageSize', value);\n    setError(''); // Clear any previous error when an option is selected\n  };\n\n  const validateSelection = () => {\n    if (!garageSize) {\n      setError('Please select a garage size.');\n      return false;\n    }\n    return true;\n  };\n\n  const handleNext = () => {\n    if (validateSelection()) {\n      return true; // Validation passed, proceed to the next page\n    } else {\n      return false; // Validation failed, stay on the current page\n    }\n  };\n\n  return (\n    <div className=\"form-page\">\n      <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />\n      <h1>Select Your Garage Size</h1>\n      <form>\n        <div className=\"form-group\">\n          <label>Select the size of your garage:</label>\n          <div className=\"custom-select-grid\">\n            <div\n              className={`custom-select-option ${garageSize === '2 Car Garage' ? 'selected' : ''}`}\n              onClick={() => handleOptionChange('2 Car Garage')}\n            >\n              2 Car Garage\n            </div>\n            <div\n              className={`custom-select-option ${garageSize === '3 Car Garage' ? 'selected' : ''}`}\n              onClick={() => handleOptionChange('3 Car Garage')}\n            >\n              3 Car Garage\n            </div>\n            <div\n              className={`custom-select-option ${garageSize === '4 Car Garage' ? 'selected' : ''}`}\n              onClick={() => handleOptionChange('4 Car Garage')}\n            >\n              4 Car Garage\n            </div>\n          </div>\n          {error && <span className=\"error-message\">{error}</span>}\n        </div>\n      </form>\n      <FormNavigation \n        prevPath=\"/step2\" \n        nextPath=\"/step3\" \n        onNext={handleNext} \n      />\n    </div>\n  );\n};\n\nexport default FormPage2_5;\n","import React, { useContext, useState } from 'react';\nimport { FormContext } from '../FormContext';\nimport FormNavigation from '../components/FormNavigation';\nimport ProgressBar from '../components/ProgressBar';\n\nconst FormPage3 = ({ currentStep, totalSteps }) => {\n  const { formData, updateFormData } = useContext(FormContext);\n  const [error, setError] = useState('');\n\n  const options = [\n    { value: 'Bambi', label: 'Bambi', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Bambi.png', preview: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Bambi_preview.jpg' },\n    { value: 'Cabin Fever', label: 'Cabin Fever', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Cabin_Fever.png', preview: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/CabinFever_preview.jpg' },\n    { value: 'Coyote', label: 'Coyote', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Coyote.png', preview: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Coyote_preview.jpg' },\n    { value: 'Domino', label: 'Domino', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Domino.png', preview: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Domino_preview.jpg' },\n    { value: 'Gravel', label: 'Gravel', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Gravel.png', preview: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Gravel_preview.jpg' },\n    { value: 'Raven', label: 'Raven', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Raven.png', preview: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Raven_preview.jpg' },\n    { value: 'Safari', label: 'Safari', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Safari.png', preview: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Safari_preview.jpg' },\n    { value: 'Tidal Wave', label: 'Tidal Wave', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Tidal_Wave.png', preview: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/TidalWave_preview.jpg' },\n    { value: 'Wombat', label: 'Wombat', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Wombat.png', preview: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/Wombat_preview.jpg' },\n  ];\n\n  const handleOptionChange = (value) => {\n    const selected = options.find(option => option.value === value);\n    updateFormData('floorStyle', value);\n    updateFormData('imagePreview', selected ? selected.preview : '');\n    setError(''); // Clear any previous error when an option is selected\n  };\n\n  const validateSelection = () => {\n    if (!formData.floorStyle) {\n      setError('Please select a floor flake style.');\n      return false;\n    }\n    return true;\n  };\n\n  const handleNext = () => {\n    if (validateSelection()) {\n      return true; // Validation passed, proceed to the next page\n    } else {\n      return false; // Validation failed, stay on the current page\n    }\n  };\n\n  return (\n    <div className=\"form-page\">\n      <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />\n      <h1>Choose your style...</h1>\n      <form>\n        <div className=\"form-group\">\n          <label>Select a floor flake style:</label>\n          <div className=\"custom-select-grid\">\n            {options.map(option => (\n              <div\n                key={option.value}\n                className={`custom-select-option ${option.value === formData.floorStyle ? 'selected' : ''}`}\n                onClick={() => handleOptionChange(option.value)}\n              >\n                <img src={option.image} alt={option.label} />\n                <span>{option.label}</span>\n              </div>\n            ))}\n          </div>\n          {error && <span className=\"error-message\">{error}</span>}\n        </div>\n        {formData.imagePreview && (\n          <div className=\"image-preview\">\n            <img src={formData.imagePreview} alt=\"Preview\" />\n          </div>\n        )}\n      </form>\n      <FormNavigation \n        prevPath=\"/step2-5\" \n        nextPath=\"/step4\" \n        onNext={handleNext} \n      />\n    </div>\n  );\n};\n\nexport default FormPage3;\n","import React, { useContext } from 'react';\nimport { FormContext } from '../FormContext';\nimport FormNavigation from '../components/FormNavigation';\nimport ProgressBar from '../components/ProgressBar';\n\nconst FormPage4 = ({ currentStep, totalSteps }) => {\n  const { formData, updateFormData } = useContext(FormContext);\n\n  const handleSwitchChange = (e) => {\n    updateFormData('existingCoating', e.target.checked);\n  };\n\n  return (\n    <div className=\"form-page\">\n      <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />\n      <h1>Do you have an existing floor coating that needs to be removed?</h1>\n      <form>\n        <div className=\"form-group\">\n          <label className=\"switch\">\n            <input\n              type=\"checkbox\"\n              checked={formData.existingCoating}\n              onChange={handleSwitchChange}\n            />\n            <span className=\"slider\"></span>\n          </label>\n        </div>\n        <div className=\"image-field\">\n          <img src=\"https://autosnap.github.io/legacyindustrialcoatings_form/images/existing_coating.jpg\" alt=\"Existing Coating\" />\n        </div>\n      </form>\n      <FormNavigation prevPath=\"/step3\" nextPath=\"/step5\" />\n    </div>\n  );\n};\n\nexport default FormPage4;\n","import React, { useContext } from 'react';\nimport { FormContext } from '../FormContext';\nimport FormNavigation from '../components/FormNavigation';\nimport ProgressBar from '../components/ProgressBar';\n\nconst FormPage5 = ({ currentStep, totalSteps }) => {\n  const { formData, updateFormData } = useContext(FormContext);\n\n  const handleSwitchChange = (e) => {\n    updateFormData('silicaSand', e.target.checked);\n  };\n\n  return (\n    <div className=\"form-page\">\n      <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />\n      <h1>Would you like to add our Silica Sand coating for better floor grip and safety?</h1>\n      <form>\n        <div className=\"form-group\">\n          <label className=\"switch\">\n            <input\n              type=\"checkbox\"\n              checked={formData.silicaSand || false} // Ensure checked is always a boolean\n              onChange={handleSwitchChange}\n            />\n            <span className=\"slider\"></span>\n          </label>\n        </div>\n        <div className=\"image-field\">\n          <img src=\"https://autosnap.github.io/legacyindustrialcoatings_form/images/silicasand.jpg\" alt=\"Silica Sand Coating\" />\n        </div>\n      </form>\n      <FormNavigation prevPath=\"/step4\" nextPath=\"/step6\" />\n    </div>\n  );\n};\n\nexport default FormPage5;\n","import React, { useContext, useState } from 'react';\nimport { FormContext } from '../FormContext';\nimport FormNavigation from '../components/FormNavigation';\nimport ProgressBar from '../components/ProgressBar';\n\nconst FormPage6 = ({ currentStep, totalSteps }) => {\n  const { formData, updateFormData } = useContext(FormContext);\n  const [error, setError] = useState('');\n\n  const options = [\n    { value: 'No Damage', title: 'No Damage', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/no_damage.jpg' },\n    { value: 'Medium Damage', title: 'Medium Damage', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/medium_damage.jpg' },\n    { value: 'Heavy Damage', title: 'Heavy Damage', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/heavy_damage.jpg' },\n  ];\n\n  const handleOptionChange = (value) => {\n    updateFormData('floorCondition', value);\n    setError(''); // Clear any previous error when an option is selected\n  };\n\n  const validateSelection = () => {\n    if (!formData.floorCondition) {\n      setError('Please select the condition of your current floor.');\n      return false;\n    }\n    return true;\n  };\n\n  const handleNext = () => {\n    if (validateSelection()) {\n      return true; // Validation passed, proceed to the next page\n    } else {\n      return false; // Validation failed, stay on the current page\n    }\n  };\n\n  const selectedImage = options.find(option => option.value === formData.floorCondition)?.image;\n\n  return (\n    <div className=\"form-page\">\n      <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />\n      <h1>Choose the condition of your current floor...</h1>\n      <form>\n        <div className=\"form-group\">\n          <label>Select an Option:</label>\n          <div className=\"options-row\">\n            {options.map(option => (\n              <div\n                key={option.value}\n                className={`option ${option.value === formData.floorCondition ? 'selected' : ''}`}\n                onClick={() => handleOptionChange(option.value)}\n              >\n                <img src={option.image} alt={option.title} />\n                <span>{option.title}</span>\n              </div>\n            ))}\n          </div>\n          {error && <span className=\"error-message\">{error}</span>}\n        </div>\n        {selectedImage && (\n          <div className=\"image-preview\">\n            <img src={selectedImage} alt=\"Preview\" />\n          </div>\n        )}\n      </form>\n      <FormNavigation \n        prevPath=\"/step5\" \n        nextPath=\"/step7\" \n        onNext={handleNext} \n      />\n    </div>\n  );\n};\n\nexport default FormPage6;\n","import React, { useContext } from 'react';\nimport { FormContext } from '../FormContext';\nimport FormNavigation from '../components/FormNavigation';\nimport ProgressBar from '../components/ProgressBar';\n\nconst FormPage7 = ({ currentStep, totalSteps }) => {\n  const { formData, updateFormData } = useContext(FormContext);\n\n  const handleSwitchChange = (e) => {\n    updateFormData('garageStepCoating', e.target.checked);\n  };\n\n  return (\n    <div className=\"form-page\">\n      <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />\n      <h1>Would you like to include garage floor step coating?</h1>\n      <form>\n        <div className=\"form-group\">\n          <label className=\"switch\">\n            <input\n              type=\"checkbox\"\n              checked={formData.garageStepCoating || false} // Ensure checked is always boolean\n              onChange={handleSwitchChange}\n            />\n            <span className=\"slider\"></span>\n          </label>\n        </div>\n        <div className=\"image-field\">\n          <img src=\"https://autosnap.github.io/legacyindustrialcoatings_form/images/steps.jpg\" alt=\"Garage Floor Step Coating\" />\n        </div>\n      </form>\n      <FormNavigation prevPath=\"/step6\" nextPath=\"/step8\" />\n    </div>\n  );\n};\n\nexport default FormPage7;\n","import React, { useContext, useState } from 'react';\nimport { FormContext } from '../FormContext';\nimport FormNavigation from '../components/FormNavigation';\nimport ProgressBar from '../components/ProgressBar';\n\nconst FormPage8 = ({ currentStep, totalSteps }) => {\n  const { formData, updateFormData } = useContext(FormContext);\n  const [error, setError] = useState('');\n\n  const options = [\n    { value: 'none', title: 'No Stem Treatment', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/no_vertical.jpeg' },\n    { value: 'standard', title: 'Standard 2-4\" Treatment', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/base.jpg' },\n    { value: 'tall', title: 'Tall Stem Treatment', image: 'https://autosnap.github.io/legacyindustrialcoatings_form/images/stem.jpg' },\n  ];\n\n  const handleOptionChange = (value) => {\n    updateFormData('stemTreatment', value);\n    setError(''); // Clear any previous error when an option is selected\n  };\n\n  const validateSelection = () => {\n    if (!formData.stemTreatment) {\n      setError('Please select a stem treatment option.');\n      return false;\n    }\n    return true;\n  };\n\n  const handleNext = () => {\n    if (validateSelection()) {\n      return true; // Validation passed, proceed to the next page\n    } else {\n      return false; // Validation failed, stay on the current page\n    }\n  };\n\n  const selectedImage = options.find(option => option.value === formData.stemTreatment)?.image;\n\n  return (\n    <div className=\"form-page\">\n      <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />\n      <h1>What kind of vertical wall stem treatment would you like?</h1>\n      <form>\n        <div className=\"form-group\">\n          <label>Select an Option:</label>\n          <div className=\"options-row\">\n            {options.map(option => (\n              <div\n                key={option.value}\n                className={`option ${option.value === formData.stemTreatment ? 'selected' : ''}`}\n                onClick={() => handleOptionChange(option.value)}\n              >\n                <img src={option.image} alt={option.title} />\n                <span>{option.title}</span>\n              </div>\n            ))}\n          </div>\n          {error && <span className=\"error-message\">{error}</span>}\n        </div>\n        {selectedImage && (\n          <div className=\"image-preview\">\n            <img src={selectedImage} alt=\"Preview\" />\n          </div>\n        )}\n      </form>\n      <FormNavigation \n        prevPath=\"/step7\" \n        nextPath=\"/step8-5\" \n        onNext={handleNext} \n      />\n    </div>\n  );\n};\n\nexport default FormPage8;\n","import React, { useContext, useState } from 'react';\nimport { FormContext } from '../FormContext';\nimport FormNavigation from '../components/FormNavigation';\nimport ProgressBar from '../components/ProgressBar';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nconst FormPage85 = ({ currentStep, totalSteps }) => {\n  const { formData, updateFormData } = useContext(FormContext);\n  const [openCalendar1, setOpenCalendar1] = useState(false);\n  const [openCalendar2, setOpenCalendar2] = useState(false);\n  const [error, setError] = useState('');\n\n  // Calculate the minimum selectable date (7 days from now)\n  const minSelectableDate = new Date();\n  minSelectableDate.setDate(minSelectableDate.getDate() + 7);\n\n  const handleDateChange1 = (date) => {\n    updateFormData('installationDate1', date);\n    setOpenCalendar1(false);\n    setError(''); // Clear any previous error\n  };\n\n  const handleDateChange2 = (date) => {\n    updateFormData('installationDate2', date);\n    setOpenCalendar2(false);\n    setError(''); // Clear any previous error\n  };\n\n  const formatDate = (date) => {\n    if (!date) return '';\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return date.toLocaleDateString(undefined, options);\n  };\n\n  const validateDates = () => {\n    if (!formData.installationDate1 || !formData.installationDate2) {\n      setError('Please select both installation date preferences.');\n      return false;\n    }\n    return true;\n  };\n\n  const handleNext = () => {\n    if (validateDates()) {\n      return true; // Validation passed, proceed to the next page\n    } else {\n      return false; // Validation failed, stay on the current page\n    }\n  };\n\n  return (\n    <div className=\"form-page\">\n      <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />\n      <h1>Select Your Installation Date Preferences</h1>\n      <form>\n        <div className=\"form-group\">\n          <label>Installation Date Preference 1:</label>\n          <input\n            type=\"text\"\n            value={formatDate(formData.installationDate1)}\n            onClick={() => setOpenCalendar1(!openCalendar1)}\n            readOnly\n            placeholder=\"Click to select a date\"\n          />\n          {openCalendar1 && (\n            <div className=\"calendar-popup\">\n              <Calendar\n                onChange={handleDateChange1}\n                value={formData.installationDate1 || null}\n                minDate={minSelectableDate}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"form-group\">\n          <label>Installation Date Preference 2:</label>\n          <input\n            type=\"text\"\n            value={formatDate(formData.installationDate2)}\n            onClick={() => setOpenCalendar2(!openCalendar2)}\n            readOnly\n            placeholder=\"Click to select a date\"\n          />\n          {openCalendar2 && (\n            <div className=\"calendar-popup\">\n              <Calendar\n                onChange={handleDateChange2}\n                value={formData.installationDate2 || null}\n                minDate={minSelectableDate}\n              />\n            </div>\n          )}\n        </div>\n        {error && <span className=\"error-message\">{error}</span>}\n      </form>\n      <FormNavigation \n        prevPath=\"/step8\" \n        nextPath=\"/step9\" \n        onNext={handleNext} \n      />\n    </div>\n  );\n};\n\nexport default FormPage85;\n","import React, { useContext, useState } from 'react';\nimport { FormContext } from '../FormContext';\nimport FormNavigation from '../components/FormNavigation';\nimport ProgressBar from '../components/ProgressBar';\nimport emailjs from 'emailjs-com';\nimport { useNavigate } from 'react-router-dom';\n\nconst FormPage9 = ({ currentStep, totalSteps }) => {\n  const { formData, updateFormData, calculateFinalQuote } = useContext(FormContext);\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Use useNavigate hook\n\n  const handleEmailChange = (e) => {\n    updateFormData('email', e.target.value);\n    if (e.target.value) {\n      setError(''); // Clear any previous error when an email is entered\n    }\n  };\n\n  const handlePhoneChange = (e) => {\n    updateFormData('phone', e.target.value);\n  };\n\n  const validateEmail = () => {\n    if (!formData.email) {\n      setError('Email is required.');\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = () => {\n    if (!validateEmail()) {\n      return; // Stop submission if validation fails\n    }\n\n    const finalQuote = calculateFinalQuote(); // Calculate the final quote\n\n    const templateParams = {\n      firstName: formData.firstName || 'N/A',\n      lastName: formData.lastName || 'N/A',\n      email: formData.email || 'N/A',\n      phone: formData.phone || 'N/A',\n      streetAddress: formData.streetAddress || 'N/A',\n      city: formData.city || 'N/A',\n      state: formData.state || 'N/A',\n      zipCode: formData.zipCode || 'N/A',\n      garageSize: formData.garageSize || 'N/A',\n      existingCoating: formData.existingCoating || false,\n      floorStyle: formData.floorStyle || 'N/A',\n      silicaSand: formData.silicaSand || false,\n      stemTreatment: formData.stemTreatment || 'N/A',\n      floorCondition: formData.floorCondition || 'N/A',\n      garageStepCoating: formData.garageStepCoating || false,\n      installationDate1: formData.installationDate1 || 'N/A',\n      installationDate2: formData.installationDate2 || 'N/A',\n      finalQuote: finalQuote, // Include the final quote in the email\n    };\n\n    // Log the templateParams to verify data before sending\n    console.log('Template Params:', templateParams);\n\n    emailjs.send('service_jet4rbv', 'template_46q2moz', templateParams, 'Nbr0yHwDIMS9ih92c')\n      .then(response => {\n        console.log('SUCCESS!', response.status, response.text);\n        alert('Your quote has been sent to your email!');\n        navigate('/completion'); // Use navigate to redirect to the final page\n      })\n      .catch(error => {\n        console.log('FAILED...', error);\n        alert('Failed to send quote. Please try again.');\n      });\n  };\n\n  return (\n    <div className=\"form-page\">\n      <ProgressBar currentStep={currentStep} totalSteps={totalSteps} />\n      <h1>Last step to get your quote!</h1>\n      <form>\n        <div className=\"form-group\">\n          <label>Email:</label>\n          <input\n            type=\"email\"\n            value={formData.email}\n            onChange={handleEmailChange}\n            required\n          />\n          {error && <span className=\"error-message\">{error}</span>}\n        </div>\n        <div className=\"form-group\">\n          <label>Phone:</label>\n          <input\n            type=\"tel\"\n            value={formData.phone}\n            onChange={handlePhoneChange}\n          />\n        </div>\n      </form>\n      <FormNavigation \n        prevPath=\"/step8\" \n        nextPath=\"/completion\" \n        isLastStep \n        onNext={handleSubmit} \n      />\n    </div>\n  );\n};\n\nexport default FormPage9;\n","import React, { useContext } from 'react';\nimport { FormContext } from '../FormContext';\nimport './FormCompletionPage.css'; // Import a custom CSS file for styling\n\nconst FormCompletionPage = () => {\n  const { calculateFinalQuote, formData } = useContext(FormContext);\n\n  const finalQuote = calculateFinalQuote();\n\n  const handlePaymentRedirect = () => {\n    // Redirect to the Stripe payment page\n    window.location.href = 'https://buy.stripe.com/9AQ3eq5z34Hb8Ss8ww';\n  };\n\n  return (\n    <div className=\"completion-page\">\n      <h1 className=\"completion-title\">Here is your offer!</h1>\n      <div className=\"summary-card\">\n        <div className=\"summary-header\">Summary</div>\n        <div className=\"summary-content\">\n          <div className=\"summary-item\">\n            <span className=\"summary-value\">${finalQuote}</span>\n            <span className=\"summary-label\">Total Cost</span>\n          </div>\n          <div className=\"date-summary\">\n            <div className=\"date-item\">\n              <span className=\"date-label\">Preferred Installation Date 1:</span>\n              <span className=\"date-value\">{formData.installationDate1.toLocaleDateString()}</span>\n            </div>\n            <div className=\"date-item\">\n              <span className=\"date-label\">Preferred Installation Date 2:</span>\n              <span className=\"date-value\">{formData.installationDate2.toLocaleDateString()}</span>\n            </div>\n          </div>\n        </div>\n        <button className=\"payment-button\" onClick={handlePaymentRedirect}>\n          Proceed to Down Payment\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default FormCompletionPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { FormProvider } from './FormContext';\nimport FormPage1 from './pages/FormPage1';\nimport FormPage2 from './pages/FormPage2';\nimport FormPage25 from './pages/FormPage25';\nimport FormPage3 from './pages/FormPage3';\nimport FormPage4 from './pages/FormPage4';\nimport FormPage5 from './pages/FormPage5';\nimport FormPage6 from './pages/FormPage6';\nimport FormPage7 from './pages/FormPage7';\nimport FormPage8 from './pages/FormPage8';\nimport FormPage85 from './pages/FormPage85';\nimport FormPage9 from './pages/FormPage9';\nimport FormCompletionPage from './pages/FormCompletionPage';\n\nconst App = () => {\n  const totalSteps = 11; // Total number of form pages\n\n  return (\n    <FormProvider>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<FormPage1 currentStep={1} totalSteps={totalSteps} />} />\n          <Route path=\"/step2\" element={<FormPage2 currentStep={2} totalSteps={totalSteps} />} />\n          <Route path=\"/step2-5\" element={<FormPage25 currentStep={3} totalSteps={totalSteps} />} />\n          <Route path=\"/step3\" element={<FormPage3 currentStep={4} totalSteps={totalSteps} />} />\n          <Route path=\"/step4\" element={<FormPage4 currentStep={5} totalSteps={totalSteps} />} />\n          <Route path=\"/step5\" element={<FormPage5 currentStep={6} totalSteps={totalSteps} />} />\n          <Route path=\"/step6\" element={<FormPage6 currentStep={7} totalSteps={totalSteps} />} />\n          <Route path=\"/step7\" element={<FormPage7 currentStep={8} totalSteps={totalSteps} />} />\n          <Route path=\"/step8\" element={<FormPage8 currentStep={9} totalSteps={totalSteps} />} />\n          <Route path=\"/step8-5\" element={<FormPage85 currentStep={10} totalSteps={totalSteps} />} />\n          <Route path=\"/step9\" element={<FormPage9 currentStep={11} totalSteps={totalSteps} />} />\n          <Route path=\"/completion\" element={<FormCompletionPage />} />\n          <Route path=\"*\" element={<FormPage1 currentStep={1} totalSteps={totalSteps} />} /> {/* Fallback route */}\n        </Routes>\n      </Router>\n    </FormProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './styles.css'; // Import the CSS file\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}